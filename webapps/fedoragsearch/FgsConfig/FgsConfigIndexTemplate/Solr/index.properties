# $Id: index.properties $

fgsindex.indexName					= INDEXNAME

fgsindex.operationsImpl				= dk.defxws.fgssolr.OperationsImpl

fgsindex.defaultUpdateIndexDocXslt		= INDEXINGDOCXSLT
fgsindex.defaultUpdateIndexResultXslt	= updateIndexToResultPage
fgsindex.defaultGfindObjectsResultXslt	= gfindObjectsToResultPage
fgsindex.defaultBrowseIndexResultXslt	= browseIndexToResultPage
fgsindex.defaultGetIndexInfoResultXslt	= copyXml

#fgsindex.indexBase    = http://localhost:8983/solr # the Solr server base url
fgsindex.indexBase    = INDEXBASE

#fgsindex.indexDir				= <...> The directory must exist, it is used for browseIndex and gfindObjects
fgsindex.indexDir				= INDEXDIR

# the next two properties have their counterpart in the Solr config file schema.xml,
# make sure they match, else you get different search behaviour from the same query
# sent to Solr versus sent to GSearch.
fgsindex.analyzer				= org.apache.lucene.analysis.standard.StandardAnalyzer
fgsindex.defaultQueryFields		= dc.description dc.title

# for queries sent to Solr, sorting is determined in the Solr config files
# for queries sent to  GSearch, sortFields may be given as parameter to gfindObjects, or as config default.
###########

# as parameter:			?operation=gfindObjects&sortFields=[sortFieldsValue]&...

# as config default:

#fgsindex.defaultSortFields			= sortFieldsValue

#examples:

#fgsindex.defaultSortFields			= PID,STRING,true

#fgsindex.defaultSortFields			= sf1,SCORE;sf2,cy-GB-var,true

#    sortFieldsValue	::= [sortField[';'sortField]*]
#    sortField  		::= sortFieldName[','(sortType | locale | comparatorClass)[','reverse]]]]
#    sortFieldName		::= #the name of an index field, which is UN_TOKENIZED and contains a single term per document
#    sortType			::= 'BYTE' | 'DOC' | 'DOUBLE' | 'FLOAT' | 'INT' | 'LONG' | 'SCORE' | 'SHORT' | 'STRING' | 'STRING_VAL'
#    locale				::= language['-'country['-'variant]]
#    comparatorClass    ::= package-path'.'className['('param['-'param]*')']
#    reverse			::= 'false' (default) | 'true' | 'reverse'

#    sortType 'AUTO' is removed in Lucene 3.x

# The test class dk.defxws.fedoragsearch.test.ComparatorSourceTest has been removed in GSearch 2.3,
# because the interface org.apache.lucene.search.SortComparatorSource is deprecated in Lucene 3.x

# Briefly, one or more sortFields will determine the sequence of search results,
# as defined either by sortType or by locale, and it may be in reverse.

# If no sortFieldsValue is given, then this code from GSearch is run

#   TopDocs hits = searcher.search(query, numHits); // in dk.defxws.fgslucene.Statement.java
  
# where the sequence is by default.

# If a sortFieldsValue is given, then this code is run

#   TopDocs hits = searcher.search(query, numHits, sort); 

# where sort is an instance of org.apache.lucene.search.Sort, see

#   http://lucene.apache.org/java/3_3_0/api/index.html

# See org.apache.lucene.search.SortField for more about sortType, locale and reverse values.


#fgsindex.untokenizedFields		= list of index fields created as UN_TOKENIZED
###########################
#									Effect: during search the KeywordAnalyzer is used for untokenized fields,
#									while the fgsindex.analyzer is used for other fields.
#									Only untokenized fields, which do not occur in every index document,
#									need be listed here.
# example:

#fgsindex.untokenizedFields		= fgs.contentModel uf1 uf2
fgsindex.untokenizedFields		= PID


# snippets
##########
#fgsindex.snippetBegin	= <span class=\"highlight\">
fgsindex.snippetBegin	= <span class=\"highlight\">
## this value is default if not specified
#fgsindex.snippetEnd	= </span>
fgsindex.snippetEnd	= </span>
## this value is default if not specified


# custom URIResolver
####################
#fgsindex.uriResolver	= dk.defxws.fedoragsearch.server.URIResolverImpl
